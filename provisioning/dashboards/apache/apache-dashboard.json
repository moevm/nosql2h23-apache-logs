{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "SVGBaseFix": true,
        "add100Percentage": true,
        "calcsMutation": "standard",
        "centerAlignContent": true,
        "codeData": "{\n  \"text\": \"Random text\"\n}",
        "css": "* {\n  font-family: Open Sans;\n}\n",
        "dynamicData": true,
        "dynamicFieldDisplayValues": false,
        "dynamicHtmlGraphics": false,
        "dynamicProps": false,
        "html": "<button>Export DB time range to CSV</button>",
        "onInit": "const btn = htmlNode.querySelector('button');\n\nconst timeoutLength = 3000;\nconst defaultButtonText = 'Export DB time range to CSV';\n\n\nconst saveCsvFile = (csv, filename) => {\n  const elt = document.createElement('a');\n  elt.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv));\n  elt.setAttribute('download', filename);\n\n  elt.style.display = 'none';\n  htmlNode.appendChild(elt);\n\n  elt.click();\n\n  htmlNode.removeChild(elt);\n};\n\n\nbtn.onclick = () => {\n  clearTimeout(btn.timeout);\n  btn.textContent = 'Exporting...';\n  // The refId (query name) only updates after a page refresh.\n  const [{ query, refId, datasource }] = data.request.targets;\n  // console.log('datasource', datasource);\n  const { from, to } = data.timeRange;\n  // console.log(Date.parse(from), Date.parse(to))\n  const filename = [refId, from.toISOString(), to.toISOString()].join('-') + '.csv';\n  const bod = 'from(bucket:\"apache_bucket\")\\n        |> range(start: ' + Date.parse(from) + ', stop:' + Date.parse(to) + ' )'\n  // console.log(bod) \n  fetch('http://localhost:8086/api/v2/query?org=apache_org', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token apache_token',\n      'Accept': 'application/csv',\n      'Content-type': 'application/vnd.flux'\n    },\n    body: bod\n  }).then((res) => {\n      res.text().then((data) => {\n        // console.log('data', data)\n        saveCsvFile(data, filename);\n        btn.textContent = 'Export finished';\n        \n        btn.timeout = setTimeout(() => {\n          btn.textContent = defaultButtonText;\n        }, timeoutLength);\n      })\n    })\n    .catch((e) => {\n      btn.textContent = 'Export failed... (Failed retrieving data)';\n      console.warn(e);\n\n      btn.timeout = setTimeout(() => {\n        btn.textContent = defaultButtonText;\n      }, timeoutLength);\n    });\n};",
        "onInitOnResize": false,
        "onRender": "",
        "overflow": "visible",
        "panelupdateOnMount": true,
        "reduceOptions": {
          "calcs": [
            "lastNotNull",
            "last",
            "firstNotNull",
            "first",
            "min",
            "max",
            "mean",
            "sum",
            "count",
            "range",
            "delta",
            "step",
            "diff",
            "logmin",
            "allIsZero",
            "allIsNull",
            "diffperc"
          ]
        },
        "renderOnMount": true,
        "rootCSS": "",
        "useGrafanaScrollbar": true
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "from(bucket: \"apache_bucket\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n",
          "refId": "A"
        }
      ],
      "transparent": true,
      "type": "gapit-htmlgraphics-panel"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 2,
      "panels": [],
      "title": "Access",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "description": "Response time in the last 24 hours.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 1,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.87,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "Time",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "keeps = if \"${Port}\" == \"All\" then [\"_time\", \"_value\", \"port\"] else [\"_time\", \"_value\"]\n\nfrom(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(\n  fn: (r) => if \"${Port}\" == \"All\" then \n    r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\")\n  else\n    r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and r[\"port\"] == \"${Port}\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\")\n  )\n  |> keep(columns: keeps)\n  |> sort(columns: [\"_time\"])\n",
          "refId": "A"
        }
      ],
      "title": "Response time [port: $Port | log: $access_file]",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#223d67",
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "fieldMinMax": false,
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 8,
        "x": 0,
        "y": 14
      },
      "id": 6,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\") and (r[\"port\"] == \"${Port}\" or \"${Port}\" == \"All\"))\n|> group(columns: [\"resp_code\"], mode: \"by\")\n|> count()\n|> keep(columns: [\"resp_code\", \"_value\"])\n|> rename(columns: {_value: \"\"})",
          "refId": "A"
        }
      ],
      "title": "Response code [port: $Port | log: $access_file]",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#223d67",
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "fieldMinMax": false,
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 8,
        "x": 8,
        "y": 14
      },
      "id": 3,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\") and (r[\"port\"] == \"${Port}\" or \"${Port}\" == \"All\"))\n|> group(columns: [\"http_version\"], mode: \"by\")\n|> count()\n|> keep(columns: [\"http_version\", \"_value\"])\n|> rename(columns: {_value: \"HTTP \"})",
          "refId": "A"
        }
      ],
      "title": "HTTP Version [port: $Port | log: $access_file]",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#223d67",
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "fieldMinMax": false,
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 8,
        "x": 16,
        "y": 14
      },
      "id": 7,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\") and (r[\"port\"] == \"${Port}\" or \"${Port}\" == \"All\"))\n|> group(columns: [\"verb\"], mode: \"by\")\n|> count()\n|> keep(columns: [\"verb\", \"_value\"])\n|> rename(columns: {_value: \"\"})",
          "refId": "A"
        }
      ],
      "title": "HTTP Method [port: $Port | log: $access_file]",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 8,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Descending",
        "wrapLogMessage": false
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "import \"join\"\n\nleft = from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\"))\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"_time\", \"resp_time\"])\n|> group(columns: [\"_time\"])\n\nright = from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"agent\" and (r[\"path\"] == \"${access_file}\" or \"${access_file}\" == \"All\"))\n|> group(columns: [\"_time\"])\n\njoin.right(\n    left: left,\n    right: right,\n    on: (l, r) => l._time == r._time,\n    as: (l, r) => ({r with resp_time: l.resp_time}),\n)\n|> group()\n|> drop(columns: [\"_field\", \"_measurement\", \"_start\", \"_stop\"])",
          "refId": "A"
        }
      ],
      "title": "Access logs [log: $access_file]",
      "type": "logs"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 5,
      "panels": [],
      "title": "Errors",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "apachelog"
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 4,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Descending",
        "wrapLogMessage": false
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "apachelog"
          },
          "query": "from(bucket: \"apache_bucket\")\n|> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n|> filter(fn: (r) => r[\"_measurement\"] == \"error\" \n  and (r[\"path\"] == \"${error_file}\" or \"${error_file}\" == \"All\")\n  and (r[\"level\"] == \"${error_loglevel}\" or \"${error_loglevel}\" == \"All\")\n)",
          "refId": "A"
        }
      ],
      "title": "Error logs [Log level: $error_loglevel | log: $error_file]",
      "type": "logs"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": "All",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "apachelog"
        },
        "definition": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: v.bucket,\n    tag: \"port\",\n    predicate: (r) => true,\n    start: -1d\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Port",
        "multi": false,
        "name": "Port",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: v.bucket,\n    tag: \"port\",\n    predicate: (r) => true,\n    start: -1d\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 3,
        "type": "query"
      },
      {
        "allValue": "All",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "apachelog"
        },
        "definition": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\")\n|> group(columns: [\"path\"])\n|> distinct(column: \"path\")\n|> keep(columns: [\"_value\"])",
        "hide": 0,
        "includeAll": true,
        "label": "Access file",
        "multi": false,
        "name": "access_file",
        "options": [],
        "query": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"access\" and r[\"_field\"] == \"resp_time\")\n|> group(columns: [\"path\"])\n|> distinct(column: \"path\")\n|> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "All",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "apachelog"
        },
        "definition": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"error\" and r[\"_field\"] == \"message\")\n|> group(columns: [\"path\"])\n|> distinct(column: \"path\")\n|> keep(columns: [\"_value\"])",
        "hide": 0,
        "includeAll": true,
        "label": "Error file",
        "multi": false,
        "name": "error_file",
        "options": [],
        "query": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"error\" and r[\"_field\"] == \"message\")\n|> group(columns: [\"path\"])\n|> distinct(column: \"path\")\n|> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "All",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "apachelog"
        },
        "definition": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"error\" and r[\"_field\"] == \"message\")\n|> group(columns: [\"level\"])\n|> distinct(column: \"level\")\n|> keep(columns: [\"_value\"])",
        "hide": 0,
        "includeAll": true,
        "label": "Error level",
        "multi": false,
        "name": "error_loglevel",
        "options": [],
        "query": "from(bucket: \"apache_bucket\")\n|> range(start: -24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"error\" and r[\"_field\"] == \"message\")\n|> group(columns: [\"level\"])\n|> distinct(column: \"level\")\n|> keep(columns: [\"_value\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1y",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Apache log stats",
  "uid": "ff2e6cf9-02b9-434b-acfb-33e6c8bdaa2c",
  "version": 2,
  "weekStart": ""
}